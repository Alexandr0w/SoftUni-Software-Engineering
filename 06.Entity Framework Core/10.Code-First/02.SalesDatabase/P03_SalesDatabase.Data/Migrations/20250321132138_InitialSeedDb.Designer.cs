// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using P03_SalesDatabase.Data;

#nullable disable

namespace P03_SalesDatabase.Data.Migrations
{
    [DbContext(typeof(SalesContext))]
    [Migration("20250321132138_InitialSeedDb")]
    partial class InitialSeedDb
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("P03_SalesDatabase.Data.Models.Customer", b =>
                {
                    b.Property<int>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CustomerId"), 1L, 1);

                    b.Property<string>("CreditCardNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("CustomerId");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            CustomerId = 1,
                            CreditCardNumber = "1234567890123456",
                            Email = "ivan@example.com",
                            Name = "Ivan Petrov"
                        },
                        new
                        {
                            CustomerId = 2,
                            CreditCardNumber = "9876543210987654",
                            Email = "maria@example.com",
                            Name = "Maria Ivanova"
                        },
                        new
                        {
                            CustomerId = 3,
                            CreditCardNumber = "4567891234567890",
                            Email = "georgi@example.com",
                            Name = "Georgi Dimitrov"
                        },
                        new
                        {
                            CustomerId = 4,
                            CreditCardNumber = "1122334455667788",
                            Email = "elena@example.com",
                            Name = "Elena Todorova"
                        },
                        new
                        {
                            CustomerId = 5,
                            CreditCardNumber = "6677889900112233",
                            Email = "petar@example.com",
                            Name = "Petar Vasilev"
                        });
                });

            modelBuilder.Entity("P03_SalesDatabase.Data.Models.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductId"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Quantity")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("ProductId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            ProductId = 1,
                            Name = "Laptop",
                            Price = 1200.99m,
                            Quantity = 5m
                        },
                        new
                        {
                            ProductId = 2,
                            Name = "Mouse",
                            Price = 25.50m,
                            Quantity = 15m
                        },
                        new
                        {
                            ProductId = 3,
                            Name = "Keyboard",
                            Price = 45.99m,
                            Quantity = 10m
                        },
                        new
                        {
                            ProductId = 4,
                            Name = "Monitor",
                            Price = 200.00m,
                            Quantity = 7m
                        },
                        new
                        {
                            ProductId = 5,
                            Name = "Headphones",
                            Price = 75.80m,
                            Quantity = 20m
                        });
                });

            modelBuilder.Entity("P03_SalesDatabase.Data.Models.Sale", b =>
                {
                    b.Property<int>("SaleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SaleId"), 1L, 1);

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("StoreId")
                        .HasColumnType("int");

                    b.HasKey("SaleId");

                    b.HasIndex("CustomerId");

                    b.HasIndex("ProductId");

                    b.HasIndex("StoreId");

                    b.ToTable("Sales");

                    b.HasData(
                        new
                        {
                            SaleId = 1,
                            CustomerId = 2,
                            Date = new DateTime(2025, 3, 21, 15, 21, 38, 688, DateTimeKind.Local).AddTicks(1764),
                            ProductId = 1,
                            StoreId = 3
                        },
                        new
                        {
                            SaleId = 2,
                            CustomerId = 1,
                            Date = new DateTime(2025, 3, 20, 15, 21, 38, 688, DateTimeKind.Local).AddTicks(1799),
                            ProductId = 3,
                            StoreId = 2
                        },
                        new
                        {
                            SaleId = 3,
                            CustomerId = 5,
                            Date = new DateTime(2025, 3, 19, 15, 21, 38, 688, DateTimeKind.Local).AddTicks(1803),
                            ProductId = 2,
                            StoreId = 4
                        },
                        new
                        {
                            SaleId = 4,
                            CustomerId = 3,
                            Date = new DateTime(2025, 3, 18, 15, 21, 38, 688, DateTimeKind.Local).AddTicks(1805),
                            ProductId = 4,
                            StoreId = 1
                        },
                        new
                        {
                            SaleId = 5,
                            CustomerId = 4,
                            Date = new DateTime(2025, 3, 17, 15, 21, 38, 688, DateTimeKind.Local).AddTicks(1807),
                            ProductId = 5,
                            StoreId = 5
                        });
                });

            modelBuilder.Entity("P03_SalesDatabase.Data.Models.Store", b =>
                {
                    b.Property<int>("StoreId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StoreId"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("StoreId");

                    b.ToTable("Stores");

                    b.HasData(
                        new
                        {
                            StoreId = 1,
                            Name = "Tech Store Sofia"
                        },
                        new
                        {
                            StoreId = 2,
                            Name = "ElectroMart Plovdiv"
                        },
                        new
                        {
                            StoreId = 3,
                            Name = "Gadget House Varna"
                        },
                        new
                        {
                            StoreId = 4,
                            Name = "Best Buy Burgas"
                        },
                        new
                        {
                            StoreId = 5,
                            Name = "Digital World Ruse"
                        });
                });

            modelBuilder.Entity("P03_SalesDatabase.Data.Models.Sale", b =>
                {
                    b.HasOne("P03_SalesDatabase.Data.Models.Customer", "Customer")
                        .WithMany("Sales")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("P03_SalesDatabase.Data.Models.Product", "Product")
                        .WithMany("Sales")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("P03_SalesDatabase.Data.Models.Store", "Store")
                        .WithMany("Sales")
                        .HasForeignKey("StoreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");

                    b.Navigation("Product");

                    b.Navigation("Store");
                });

            modelBuilder.Entity("P03_SalesDatabase.Data.Models.Customer", b =>
                {
                    b.Navigation("Sales");
                });

            modelBuilder.Entity("P03_SalesDatabase.Data.Models.Product", b =>
                {
                    b.Navigation("Sales");
                });

            modelBuilder.Entity("P03_SalesDatabase.Data.Models.Store", b =>
                {
                    b.Navigation("Sales");
                });
#pragma warning restore 612, 618
        }
    }
}
